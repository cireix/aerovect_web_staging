{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "plugin:react/recommended",
    "airbnb"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    }
  },
  "overrides": [
    {
      "files": [
        "src/util/helper/log.ts"
      ],
      "rules": {
        "no-console": "off"
      }
    },
    {
      "files": [
        "**/*.spec.ts"
      ],
      "rules": {
        "max-lines": "off"
      }
    },
    {
      "files": [
        "src/Util/log.ts"
      ],
      "rules": {
        "no-console": "off"
      }
    }
  ],
  "rules": {
    "max-len": "off",
    "no-underscore-dangle": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "react/jsx-filename-extension": [
      2,
      {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true
      }
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": [
      "error"
    ],
    "prefer-destructuring": 0,
    "indent": [
      "error",
      4,
      {
        "SwitchCase": 1
      }
    ],
    // Indent JSX with 4 spaces
    "react/jsx-indent": [
      "error",
      4
    ],
    "react/prop-types": "off",
    // Indent props with 4 spaces
    "react/jsx-indent-props": [
      "error",
      4
    ],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "no-unused-vars": "off",
    "object-shorthand": "off",
    "padded-blocks": [
      "error",
      "never"
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ]
  }
}